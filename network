1、中兴光猫操作：
   1）切换版本类型：http://192.168.1.1/hidden_version_switch.gch，缺省密码CUAdmin
   2）telnet登录：用户名：root，密码：Zte521（据说有两个例外：福建telecomadmin,四川Zte521@SC）
   3）LOID注册后仍保留telnet：
     （1）sendcmd 1 DB set TelnetCfg TS_Enable 1
     （2）sendcmd 1 DB set TelnetCfg Lan_Enable 1
     （3）sendcmd 1 DB set TelnetCfg Lan_EnableAfterOlt
     （4）sendcmd 1 DB save
   4）查看数据表：
     （1）查看整个配置表：sendcmd 1 DB all
     （2）查看某个配置表：sendcmd 1 DB p 表名
   5）查看和修改超级管理员密码【未实操验证，修改请慎重】（设置字段值的格式：sendcmd 1 DB set 表名 行数 字段名 字段值）
     （1）sendcmd 1 DB p DevAuthInfo
     （2）sendcmd 1 DB set DevAuthInfo 0 User admin
     （3）sendcmd 1 DB set DevAuthInfo 0 Pass admin
   6）查看和修改端口速率：
     （1）sendcmd 1 DB p EthRatelimitProduct
     （2）sendcmd 1 DB set EthRatelimitProduct 0 IngressPolicing_cir 1000000
     （3）sendcmd 1 DB set ETHPORTCONFProduct 0 EgressPolicing_cir 1000000
     （4）上述是修改端口1的，其他以此类推
     （5）保存：sendcmd 1 DB save
     备注：我的中兴光猫测线仪测试只接通了1236引脚，所以无法启用千兆
2、用VLC Player创建一个组播直播源
   1）windows默认使用的igmp组播版本是V3，在HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\下有两个DWORD类型参数来设置igmp参数：
      （1）IGMPLevel：0-不支持组播；1-只支持发送组播；2-组播收发全功能
      （2）IGMPVersion：2-V1；3-V2；4：V3
   2）linux组播相关设置：
      （1）接口组播设置：ip link set eth0 multicast on/off或ifconfig eth0 multicast/-multicast
      （2）设置igmp版本：sysctl net.ipv4.conf.all.force_igmp_version或直接往/proc/sys/net/ipv4/conf/all/force_igmp_version写值
      （3）设置是否启用组播转发：sysctl net.ipv4.conf.all.mc_forwarding或直接往/proc/sys/net/ipv4/conf/all/mc_forwarding写值
   3）VLC Player 创建一个组播视频源
      （1）菜单：“工具”-“偏好设置”，“串流输出”-“访问输出”-“多播输出接口”设置多播源接口
      （2）菜单：媒体-流，可选择“文件”、“视频流”、“捕获设备”
      （3）流输出里选择输出类型：http、rtsp、rtp、udp等
3、windows下多接口组播收发问题
   1）windows默认是启用组播收发全功能的
   2）windows有多个接口时，在每个接口都会添加组播路由，下面是有三个接口的组播路由情况：
      网络目标        网络掩码          网关       接口            跃点数
      224.0.0.0      240.0.0.0        在链路上    10.10.10.1      259
      224.0.0.0      240.0.0.0        在链路上    192.168.156.1   258
      224.0.0.0      240.0.0.0        在链路上    192.168.199.202 257
   3）从上图可以看到三个组播路由的跃点数不同，跃点数最低的将是组播收发接口
   4）可以通过修改接口的跃点数来指定收发组播的接口
   5）当系统安装了虚拟机，默认会增加虚拟网卡，此虚拟网卡接口的跃点数可能较低，组播收发的接口会变成虚拟网卡进而导致本机向外组播收发失败，在物理接口上抓包抓不到组播数据
4、使用wireshark+chrome抓取https数据解密
   1）密钥交换算法目前常用的有RSA和Diffie-Hellman
   2）对于密钥交换使用RSA算法，pre-master-secret由客户端生成，并使用公钥加密传输给服务器
   3）对于密钥交换使用Diffie-Hellman算法，pre-master-secret则通过在Key Exchange阶段交换的信息，由各自计算出pre-master-secret。所以pre-master-secret没有存到硬盘，也没有在网络上传输
   4）chrome浏览器默认将 TLS 会话中使用的对称密钥保存在系统环境变量SSLKEYLOGFILE指定的文件中
   5）设置系统环境变量：SSLKEYLOGFILE，值为文件如d:\ssl\sslkeylog.log
   5）wireshark在tls协议设置pre-master-secret logfile为SSLKEYLOGFILE
5、DNS加密通信：
   1）传统DNS通信的缺点（本段文字来自阿里DNS网站）：传统的DNS查询和应答采用UDP和TCP明文传输，存在网络监听、DNS劫持、中间设备干扰的风险：
      网络监听风险：即便用户采用HTTPs加密的方式访问站点，DNS查询应答并没有采用加密传输
      DNS劫持：传统DNS应答数据会被篡改，用户的访问会被路由到钓鱼网站和恶意站点
      中间设备干扰：主要是一些防火墙对DNS查询的干扰，基于域名的过滤，还有大包MTU分片的影响等
   2）目前Windows都不内置支持DNS加密通信，需要安装第三方软件包，详情查看：https://www.dnscrypt.org/#dnscrypt-windows
   3）安卓从9版本开始内置支持DNS加密通信
   4）全球支持DNS加密通信的一个知名列表：https://dnscrypt.info/public-servers
   5）目前国内支持DNS加密通信的公共DNS是dns.alidns.com：https://www.alidns.com/faqs/?spm=a2chw.13814944.0.0.783a1760Wnv1mp#dns-safe
6、iptables基于时间的控制
   1）我们经常有这样的需求：在指定时间允许或禁止上网，此时就要用到基于时间的防火墙规则
   2）存在这样一种情况，为了方便，一些路由系统会自动添加一些防火墙规则，如默认允许“已建立”和“关联”连接通信，即 使用-m conntrack --ctstate established,related参数，这个可以通过使用iptables -L --line-number查看到，
   并且规则位于某个规则链的顶部，如类似这样：1 ACCEPT all -- 0.0.0.0/0 0.0.0.0/0 ctstate RELATED,ESTABLISHED /* !fw3 */
   3）当我们创建一个基于时间的防火墙规则时，要想使规则生效，此规则就应该在上述允许规则的前面，否则已建立的连接不受此规则限制，最终结果就是，控制时间到了，已经联网的不受控制。
   4）基于时间的防火墙规则如下：
      iptables -I FORWARD 1 -m time --kerneltz --datestart  2020-05-23 --datestop 2020-06-01 --weekdays Sa,Su --monthdays 1,2--timestart 19:00:00 --timestop 23:00:00 -j DROP
      其中，-I FORWARD 1表示将此规则添加到FORWARD链的第一条，--kerneltz是使用当前系统时间，要慎重使用，因为一些路由器无CMOS时钟，可能导致时间错误，进而到点规则不生效，不使用--kerneltz则使用UTC时间
